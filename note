
VUE
--------
El sistema de componentes y rendering declarativo es el coreo de Vue.
Vue ex, para estados muy grande
Vue Router, para hacer single page.

1.- Rendering Declarativo y Manipulación de DOM
- es la forma que nos propone vue para interactuar con el DOM (two way databanding)
una vista: el html
un estado: datos de js

en vuejs es el estado el que se encarga de decir a la viste, cómo y cuando se tiene que compilar, eso 
lo llama con una funcion llamada render. permite tener sincronizado en memoria con la vista.


2.- Empresiones y Propiedades.
En una empresion puede escribir cualquier codigo de js válido, se puede sumar, usar expresiones booleanas, funciones
no se puede usar instrucciones, if, for, while.

{{ 1 + 1 + 1 }}
{{ true || false }}
{{ true ? true : false }}
{{ 'string'.toUpperCase() }}
{{ JSON.stringify({ name: 'nacho'}) }}


3.- Atributos Dinámicos (vue.html)

Directivas:
 Es la herramieta que nos brinda Vue para poder manipular el DOM y manipularlo de forma declarativa,
 ejm cambiar elemento html de forma dinamica, eliminar.

Definiendo valores dinámicos:
 v-nombredirectiva

 v-bind:src="img"
 v-bind:alt


4.- Directivas de flujo condicional
v-if/else: remueve dom, si es algo fijo.
v-show: oculta dom (display:none), si va cambiar constantemente


5.- Renderizado en listas
v-for directiva: permite renderisas array o lista dentro de nuestro HTML.
key si se modifica, vue puede seguir el trackeo.
i, indices
- permite recorrer array de objetos


6.- Manejo de Eventos
v-on:click="toggleShowPrices"
v-show=showPrices (mostrar lista)


7.- Clases en tiempo real: v-bin con class
 v-bind:class="{ orange: p.value == price }"


8.- Propiedades computadas,
se genera apartir de otras propiedades.

se agrega objeto:
 computed: {
    title() {
        return `$(this.name) - $(this.symbol)`
    }
},
la propiedad title, cambiara cada vez que cambien la propiedad name o symbol


Whatchers, a partir de un cambio de una variable, se dispara una funcion.
el nombre tiene que ser igual al nombre de una propidad de data. 
ejemplo: showPrices

9.- Two Way Data Binding.
v-model="value" |  {{ value }}

Valor en tiempo real:

---
Directivas basicas.
- v-if, v-show: para mostrar y ocultar elementos 
- v-bind:  para manejar atributas de forma dinamica
- v-for: para renderizar listas 
- v-model para el 2 way databanding
- v-on para los metodos 
- computer protertis y watcher para ejecucion en timpo real.


SISTEMA DE COMPONENTES
Permite crear  componentes que se permite reutilizar

1.- Crear componente Custom: componentes.html
Vue.component('counter')

2.- Comunicacion entre Componentes: propiedades
- Un componente padre puede enviar a componente hijos

Pasos:
    - Crear em template con el html
    - Agregar parametros pros 
    - Agregar v-bind en componente: <coin-detail>

comunicacion de padre a hiejo es propiedades

3.- Comunicacione entre componentes: Eventos  componentes3.html
comunicaciones de hijo a padre es con eventos.

v-on
el componente hijo no tiene a la propiedad: color 
lo que se hara es que el componente hijo emita un evento 
para avisarle al componente padre que tiene que modificar.

toggleShowPrices(){
    this.$emit('change-color')
}
ejecuta evento change-color, cada vez que se ejecuta ese método toggleShowPrices
$emit es del core de vue.

4.- Slots, APi de distribucion de contenido |  componentes3.html
Recibir HTML desde el componente padre
Componente padre inyecte html  a un componente hijo.

